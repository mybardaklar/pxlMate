// -----------------------------------------------------------------------------
// SCSS clearfix Mixin from doPXL
// -----------------------------------------------------------------------------
// Syntax:
// @include clearfix;
// -----------------------------------------------------------------------------
// Example in usage:
// .clearfix {
//   @include clearfix;
// }
// -----------------------------------------------------------------------------
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// -----------------------------------------------------------------------------
// SCSS margin Mixin from doPXL
// -----------------------------------------------------------------------------
// Syntax:
// @include margin($all: null, $x: null, $y: null, $top: null, $right: null, $bottom: null, $left: null, $important: false);
// -----------------------------------------------------------------------------
// $all      : length|auto|initial|inherit;
// $x        : length|auto|initial|inherit;
// $y        : length|auto|initial|inherit;
// $top      : length|auto|initial|inherit;
// $right    : length|auto|initial|inherit;
// $bottom   : length|auto|initial|inherit;
// $left     : length|auto|initial|inherit;
// $important: true|false;
// -----------------------------------------------------------------------------
// Example in usage:
// @include margin($all: '10px', $y: '25px', $x: '55px', $bottom: '100px');
// -----------------------------------------------------------------------------
@mixin margin($args) {
  $declarations: _declaration($args);

  @each $declaration in $declarations {
    $property : unquote(_get($declaration, 'property'));
    $value    : unquote(_get($declaration, 'value'));
    $important: unquote(_get($declaration, 'important'));
    
    @if $property == 'x' or $property == 'h' or $property == 'horizontal' {
      margin-right: $value _important($important);
      margin-left: $value _important($important);
    } @if $property == 'y' or $property == 'v' or $property == 'vertical' {
      margin-top: $value _important($important);
      margin-bottom: $value _important($important);
    } @if $property == 'top' {
      margin-top: $value _important($important);
    } @if $property == 'right' {
      margin-right: $value _important($important);
    } @if $property == 'bottom' {
      margin-bottom: $value _important($important);
    } @if $property == 'left' {
      margin-left: $value _important($important);
    }
  }
}

// -----------------------------------------------------------------------------
// SCSS padding Mixin from doPXL
// -----------------------------------------------------------------------------
// Syntax:
// @include padding($all: null, $x: null, $y: null, $top: null, $right: null, $bottom: null, $left: null, $important: false);
// -----------------------------------------------------------------------------
// $all      : length|auto|initial|inherit;
// $x        : length|auto|initial|inherit;
// $y        : length|auto|initial|inherit;
// $top      : length|auto|initial|inherit;
// $right    : length|auto|initial|inherit;
// $bottom   : length|auto|initial|inherit;
// $left     : length|auto|initial|inherit;
// $important: true|false;
// -----------------------------------------------------------------------------
// Example in usage:
// @include padding($all: '10px', $y: '25px', $x: '55px', $bottom: '100px');
// -----------------------------------------------------------------------------
@mixin padding($args) {
  $declarations: _declaration($args);

  @each $declaration in $declarations {
    $property : unquote(_get($declaration, 'property'));
    $value    : unquote(_get($declaration, 'value'));
    $important: unquote(_get($declaration, 'important'));
    
    @if $property == 'x' or $property == 'h' or $property == 'horizontal' {
      padding-right: $value _important($important);
      padding-left: $value _important($important);
    } @if $property == 'y' or $property == 'v' or $property == 'vertical' {
      padding-top: $value _important($important);
      padding-bottom: $value _important($important);
    } @if $property == 'top' {
      padding-top: $value _important($important);
    } @if $property == 'right' {
      padding-right: $value _important($important);
    } @if $property == 'bottom' {
      padding-bottom: $value _important($important);
    } @if $property == 'left' {
      padding-left: $value _important($important);
    }
  }
}

// -----------------------------------------------------------------------------
// SCSS position Mixin from doPXL
// -----------------------------------------------------------------------------
// Syntax:
// @include position($property: 'static', $all: null, $x: null, $y: null, $top: null, $right: null, $bottom: null, $left: null, $important: false);
// -----------------------------------------------------------------------------
// $position : static|absolute|fixed|relative|sticky|initial|inherit;
// $all      : auto|length|initial|inherit;
// $x        : auto|length|initial|inherit;
// $y        : auto|length|initial|inherit;
// $top      : auto|length|initial|inherit;
// $right    : auto|length|initial|inherit;
// $bottom   : auto|length|initial|inherit;
// $left     : auto|length|initial|inherit;
// $important: true|false;
// -----------------------------------------------------------------------------
// Example in usage:
// @include position(
//   $property: 'fixed',
//   $all			: 0,
//   $bottom	: 'auto'
// );
// -----------------------------------------------------------------------------
@mixin position($args) {
  $properties: _str-to-list($args, ',');

  $position  : _get($properties, 1);
  $properties: _get($properties, 2);

  @if $position == 'sticky' {
    position: -webkit-sticky;
    position: sticky;
  } @else {
    position: unquote($position);
  }

  $declarations: _declaration($properties);
  
  @each $declaration in $declarations {
    $property : unquote(_get($declaration, 'property'));
    $value    : unquote(_get($declaration, 'value'));
    $important: unquote(_get($declaration, 'important'));
    
    @if $property == 'x' or $property == 'h' or $property == 'horizontal' {
      right: $value _important($important);
      left: $value _important($important);
    } @if $property == 'y' or $property == 'v' or $property == 'vertical' {
      top: $value _important($important);
      bottom: $value _important($important);
    } @if $property == 'top' {
      top: $value _important($important);
    } @if $property == 'right' {
      right: $value _important($important);
    } @if $property == 'bottom' {
      bottom: $value _important($important);
    } @if $property == 'left' {
      left: $value _important($important);
    }
  }
}

// -----------------------------------------------------------------------------
// SCSS selection Mixin from doPXL
// -----------------------------------------------------------------------------
// Syntax:
// @include selection;
// -----------------------------------------------------------------------------
// Example in usage:
// @include selection {...}
// -----------------------------------------------------------------------------
@mixin selection {
  ::-moz-selection { @content; }
  ::selection { @content; }
}